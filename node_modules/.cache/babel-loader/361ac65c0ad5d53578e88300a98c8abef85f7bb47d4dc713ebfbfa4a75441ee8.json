{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"CardItem\"\n};\nconst _hoisted_2 = {\n  ref: \"cardCanvas\"\n};\nconst _hoisted_3 = {\n  class: \"name\"\n};\nconst _hoisted_4 = {\n  class: \"count\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"sp\"\n}, \"消費SP\", -1);\nconst _hoisted_6 = {\n  class: \"cost\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    class: \"card-item btn btn-outline-secondary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.select && $options.select(...args))\n  }, [_createElementVNode(\"canvas\", _hoisted_2, null, 512), _createElementVNode(\"p\", _hoisted_3, _toDisplayString($props.name), 1), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, _toDisplayString($props.count), 1)]), _createElementVNode(\"div\", null, [_hoisted_5, _createElementVNode(\"p\", _hoisted_6, _toDisplayString($props.cost), 1)])])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAU;;EAETC,GAAG,EAAC;AAAY;;EACrBD,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAO;gCAIhBE,oBAAsB;EAAnBF,KAAK,EAAC;AAAI,GAAC,MAAI;;EACfA,KAAK,EAAC;AAAM;;uBATrBG,oBAYM,OAZNC,UAYM,GAXJF,oBAUS;IAVDF,KAAK,EAAC,qCAAqC;IAAEK,OAAK,yCAAEC,2CAAM;MAChEJ,oBAAkC,UAAlCK,UAAkC,cAClCL,oBAA8B,KAA9BM,UAA8B,mBAAXC,WAAI,OACvBP,oBAEM,OAFNQ,UAEM,GADJR,oBAAkB,4BAAZO,YAAK,SAEbP,oBAGM,cAFJS,UAAsB,EACtBT,oBAA8B,KAA9BU,UAA8B,mBAAXH,WAAI","names":["class","ref","_createElementVNode","_createElementBlock","_hoisted_1","onClick","$options","_hoisted_2","_hoisted_3","$props","_hoisted_4","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["C:\\Users\\白狼S５\\nawabato\\src\\components\\parts\\CardItem.vue"],"sourcesContent":["<template>\r\n  <div class=\"CardItem\">\r\n    <button class=\"card-item btn btn-outline-secondary\" @click=\"select\">\r\n      <canvas ref=\"cardCanvas\"></canvas>\r\n      <p class=\"name\">{{ name }}</p>\r\n      <div class=\"count\">\r\n        <p>{{ count }}</p>\r\n      </div>\r\n      <div>\r\n        <p class=\"sp\">消費SP</p>\r\n        <p class=\"cost\">{{ cost }}</p>\r\n      </div>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CardItem\",\r\n  props: {\r\n    id:Number,\r\n    name: String,\r\n    count: Number,\r\n    cost: Number,\r\n    map: Array,\r\n    block:String,\r\n    sp_block:String,\r\n  },\r\n  data() {\r\n    return {\r\n      isSelect:false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.ctx = this.$refs.cardCanvas.getContext(\"2d\");\r\n    this.imageDraw(this.map);\r\n  },\r\n  methods: {\r\n    imageDraw: function (map) {\r\n      let index = 0;\r\n      for (let y = 0; y < 8; y++) {\r\n        for (let x = 0; x < 8; x++) {\r\n          let image = new Image();\r\n          switch (map[index]) {\r\n            case 0:\r\n              image.src = this.$store.state.blocks[0];\r\n              break;\r\n            case 1:\r\n              image.src = this.block;\r\n              break;\r\n            case 2:\r\n              image.src = this.sp_block;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          image.onload = () => {\r\n            this.ctx.drawImage(image, x * 36+6, y * 18+3, 36, 18);\r\n          };\r\n          index++;\r\n        }\r\n      }\r\n    },\r\n    select:function () {\r\n      console.log(this.id,this.name);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.card-item {\r\n  width: 90px;\r\n  height: 150px;\r\n}\r\n.card-item canvas {\r\n  background-color: #a7a6a6;\r\n  width: 80px;\r\n  height: 80px;\r\n  margin: 0px -10px;\r\n}\r\n.card-item .name {\r\n  font-size: 0.5em;\r\n  line-height: 1;\r\n}\r\n.card-item .count {\r\n  margin: 1px;\r\n  font-size: 1.5em;\r\n}\r\n.card-item .sp {\r\n  font-size: 0.3em;\r\n}\r\n.card-item .cost {\r\n  font-size: 1em;\r\n}\r\n.card-item div {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  line-height: 0.1;\r\n  margin: -10px 0px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}