{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0630826f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"deckList\"\n};\nconst _hoisted_2 = {\n  class: \"list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Deck = _resolveComponent(\"Deck\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.$store.state.deckList, (value, key, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"name\",\n      key: index\n    }, [_createElementVNode(\"ul\", {\n      class: \"btn btn-outline-secondary\",\n      onClick: $event => $options.selectDeck(key)\n    }, [_createElementVNode(\"p\", null, _toDisplayString(value.name), 1)], 8, _hoisted_3)]);\n  }), 128))]), _createVNode(_component_Deck, {\n    deck: $data.myDeck\n  }, null, 8, [\"deck\"])])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAM;;;;uBADnBC,oBAkBM,OAlBNC,UAkBM,GAjBJC,oBAgBM,OAhBNC,UAgBM,GAfJD,oBAaM,iCAZJF,oBAWMI,kCAT+BC,MAAM,CAACC,KAAK,CAACC,QAAQ,GAAhDC,KAAK,EAAEC,GAAG,EAAEC,KAAK;yBAF3BV,oBAWM;MAVJD,KAAK,EAAC,MAAM;MAEXU,GAAG,EAAEC;QAENR,oBAKK;MAJHH,KAAK,EAAC,2BAA2B;MAChCY,OAAK,YAAEC,mBAAU,CAACH,GAAG;QAEtBP,oBAAuB,4BAAjBM,KAAK,CAACK,IAAI;eAItBC,aAAuBC;IAAhBC,IAAI,EAAEC;EAAM","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","$store","state","deckList","value","key","index","onClick","$options","name","_createVNode","_component_Deck","deck","$data"],"sourceRoot":"","sources":["C:\\Users\\白狼S５\\nawabato\\src\\views\\DeckListView.vue"],"sourcesContent":["<template>\r\n  <div class=\"deckList\">\r\n    <div class=\"list\">\r\n      <div>\r\n        <div\r\n          class=\"name\"\r\n          v-for=\"(value, key, index) in this.$store.state.deckList\"\r\n          :key=\"index\"\r\n        >\r\n          <ul\r\n            class=\"btn btn-outline-secondary\"\r\n            @click=\"selectDeck(key)\"\r\n          >\r\n            <p>{{ value.name }}</p>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <Deck :deck=\"myDeck\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Deck from \"@/components/parts/Deck.vue\";\r\n\r\nexport default {\r\n  name: \"CardListView\",\r\n  components: {\r\n    Deck,\r\n  },\r\n  props: {\r\n  },\r\n  data() {\r\n    return {\r\n      myDeck: [],\r\n    };\r\n  },\r\n  methods: {\r\n    loadDeck: function () {\r\n      this.myDeck.splice(0);\r\n      let cardList = this.$store.state.deckList[this.$store.state.currentDeck].deck;\r\n      cardList.forEach((id) =>\r\n        this.myDeck.push(this.$store.getters.getCardList(id)));\r\n      console.log(this.myDeck);\r\n    },\r\n    selectDeck: function(index){\r\n      this.$store.state.currentDeck = index;\r\n      this.loadDeck();\r\n    }\r\n  },\r\n  created(){\r\n    this.loadDeck();\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.deckList {\r\n  .list {\r\n    display: flex;\r\n    justify-content: center;\r\n    .name {\r\n      display: block;\r\n    }\r\n  }\r\n  ul {\r\n    background-color: #00eeff;\r\n    width: 150px;\r\n    height: 50px;\r\n    margin: 0px 0px;\r\n    padding: 0px 0px;\r\n  }\r\n  .container {\r\n    margin: 0px 0px;\r\n    padding: 0px 0px;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}